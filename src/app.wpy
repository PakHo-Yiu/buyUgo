<style lang="less">
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import '@/baseAPI.js'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/tabs/home',
      'pages/tabs/cates',
      'pages/tabs/search',
      'pages/tabs/cart',
      'pages/tabs/me',
      //商品详情
      'pages/goods_detail/main',
      //商品列表
      'pages/goods_list'
    ],
    window: {
      //分享按钮等组件背景色
      backgroundTextStyle: 'dark',
      //导航栏背景色
      navigationBarBackgroundColor: '#D81E06',
      //导航栏文本标题
      navigationBarTitleText: '黑马优购',
      //导航栏文本颜色
      navigationBarTextStyle: 'white'
    },
    tabBar:{
      //选中的文本颜色
      selectedColor: '#D81E06',
      // tabBar配置参数
      list:[{
        //页面路径
        pagePath:'pages/tabs/home',
        //导航条文本
        text:'首页',
        //默认icon路径
        iconPath:'/assets/icons/home.png',
        //选中的icon路径
        selectedIconPath:'/assets/icons/home-active.png'
      },{
        pagePath:'pages/tabs/cates',
        text:'分类',
        iconPath:'/assets/icons/cates.png',
        selectedIconPath:'/assets/icons/cates-active.png'
      },{
        pagePath:'pages/tabs/search',
        text:'搜索',
        iconPath:'/assets/icons/search.png',
        selectedIconPath:'/assets/icons/search-active.png'
      },{
        pagePath:'pages/tabs/cart',
        text:'购物车',
        iconPath:'/assets/icons/cart.png',
        selectedIconPath:'/assets/icons/cart-active.png'
      },{
        pagePath:'pages/tabs/me',
        text:'我的',
        iconPath:'/assets/icons/my.png',
        selectedIconPath:'/assets/icons/my-active.png'
      }]
    },
    //引用注册组件
    usingComponents: {
      // 分类导航组件
      "van-sidebar": "./assets/vant/sidebar/index",
      "van-sidebar-item": "./assets/vant/sidebar-item/index",
      // 布局相关组件
      "van-row": "./assets/vant/row/index",
      "van-col": "./assets/vant/col/index",
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
    // 可以为异步的API,开启Promise功能,使得异步API调用的结果,返回值是Promise对象
    this.use('promisify')
    // 拦截器
    this.intercept('request', {
      // 发出请求时的回调函数
      config (p) {
        // 显示loading
        wepy.showLoading({
          title: '数据加载中...'
        })
        // 必须返回OBJECT参数对象，否则无法发送请求到服务端
        return p;
      },

      // 请求成功后的回调函数
      success (p) {
        // 可以在这里对收到的响应数据对象进行加工处理
        // 必须返回响应数据对象，否则后续无法对响应数据进行处理
        return p;
      },

      // 请求失败后的回调函数
      fail (p) {
        // 必须返回响应数据对象，否则后续无法对响应数据进行处理
        return p;
      },

      // 请求完成时的回调函数(请求成功或失败都会被执行)
      complete (p) {
        wepy.hideLoading()
      }
    })
  }

  onLaunch() {
    console.log('小程序启动了')
  }
}
</script>
